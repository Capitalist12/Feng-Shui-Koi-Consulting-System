Index: src/main/java/com/example/Feng_Shui_Koi_Consulting_System/service/CategoryService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.Feng_Shui_Koi_Consulting_System.service;\r\n\r\nimport com.example.Feng_Shui_Koi_Consulting_System.dto.request.CategoryRequest;\r\nimport com.example.Feng_Shui_Koi_Consulting_System.dto.request.KoiTypeRequest;\r\nimport com.example.Feng_Shui_Koi_Consulting_System.dto.response.CategoryResponse;\r\nimport com.example.Feng_Shui_Koi_Consulting_System.dto.response.KTResponse;\r\nimport com.example.Feng_Shui_Koi_Consulting_System.entity.Category;\r\nimport com.example.Feng_Shui_Koi_Consulting_System.entity.KoiTypes;\r\nimport com.example.Feng_Shui_Koi_Consulting_System.exception.AppException;\r\nimport com.example.Feng_Shui_Koi_Consulting_System.exception.ErrorCode;\r\nimport com.example.Feng_Shui_Koi_Consulting_System.mapper.CategoryMapper;\r\nimport com.example.Feng_Shui_Koi_Consulting_System.mapper.KoiTypeMapper;\r\nimport com.example.Feng_Shui_Koi_Consulting_System.repository.CategoryRepo;\r\nimport com.example.Feng_Shui_Koi_Consulting_System.repository.KoiTypeRepo;\r\nimport lombok.AccessLevel;\r\nimport lombok.RequiredArgsConstructor;\r\nimport lombok.experimental.FieldDefaults;\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport org.springframework.stereotype.Service;\r\n\r\nimport java.util.List;\r\nimport java.util.stream.Collectors;\r\n\r\n@Service\r\n@RequiredArgsConstructor\r\n@FieldDefaults(level = AccessLevel.PRIVATE, makeFinal = true)\r\npublic class CategoryService {\r\n    CategoryRepo categoryRepo;\r\n    CategoryMapper categoryMapper;\r\n\r\n    public CategoryResponse createCategory(CategoryRequest request) {\r\n\r\n        if (categoryRepo.existsByCategoryName(request.getCategoryName()))\r\n            throw new AppException(ErrorCode.CATEGORY_NOT_EXIST);\r\n\r\n        Category category = categoryMapper.toCategory(request);\r\n        category.setCategoryID(generateCategoryID());\r\n        return categoryMapper.toCategoryResponse(categoryRepo.save(category));\r\n    }\r\n\r\n    //@PreAuthorize(\"hasRole('ADMIN')\")\r\n    public List<CategoryResponse> getCategories(){\r\n        return categoryRepo.findAll().stream()\r\n                .map(categoryMapper :: toCategoryResponse).collect(Collectors.toList());\r\n    }\r\n\r\n    public CategoryResponse updateCategory(String categoryID ,CategoryRequest request) {\r\n\r\n        Category category = categoryRepo.findById(categoryID)\r\n                .orElseThrow(() -> new AppException(ErrorCode.CATEGORY_NOT_EXIST));\r\n        categoryMapper.updateCategory(category,request);\r\n        return categoryMapper.toCategoryResponse(categoryRepo.save(category));\r\n    }\r\n\r\n    public Category findByCategoryName(String categoryName) {\r\n        return categoryRepo.findByCategoryName(categoryName)\r\n                .orElseThrow(() -> new AppException(ErrorCode.CATEGORY_NOT_EXIST));\r\n    }\r\n\r\n    public void deleteCategory(String categoryID){\r\n        categoryRepo.deleteById(categoryID);\r\n    }\r\n\r\n    public String generateCategoryID(){\r\n        return \"CAT\" + String.format(\"%05d\", System.nanoTime() % 100000);\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/example/Feng_Shui_Koi_Consulting_System/service/CategoryService.java b/src/main/java/com/example/Feng_Shui_Koi_Consulting_System/service/CategoryService.java
--- a/src/main/java/com/example/Feng_Shui_Koi_Consulting_System/service/CategoryService.java	(revision c8504fad336dc4eb4ae3534b5392a08e8176c30e)
+++ b/src/main/java/com/example/Feng_Shui_Koi_Consulting_System/service/CategoryService.java	(date 1728834792322)
@@ -1,21 +1,15 @@
 package com.example.Feng_Shui_Koi_Consulting_System.service;
 
 import com.example.Feng_Shui_Koi_Consulting_System.dto.request.CategoryRequest;
-import com.example.Feng_Shui_Koi_Consulting_System.dto.request.KoiTypeRequest;
 import com.example.Feng_Shui_Koi_Consulting_System.dto.response.CategoryResponse;
-import com.example.Feng_Shui_Koi_Consulting_System.dto.response.KTResponse;
 import com.example.Feng_Shui_Koi_Consulting_System.entity.Category;
-import com.example.Feng_Shui_Koi_Consulting_System.entity.KoiTypes;
 import com.example.Feng_Shui_Koi_Consulting_System.exception.AppException;
 import com.example.Feng_Shui_Koi_Consulting_System.exception.ErrorCode;
 import com.example.Feng_Shui_Koi_Consulting_System.mapper.CategoryMapper;
-import com.example.Feng_Shui_Koi_Consulting_System.mapper.KoiTypeMapper;
 import com.example.Feng_Shui_Koi_Consulting_System.repository.CategoryRepo;
-import com.example.Feng_Shui_Koi_Consulting_System.repository.KoiTypeRepo;
 import lombok.AccessLevel;
 import lombok.RequiredArgsConstructor;
 import lombok.experimental.FieldDefaults;
-import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.stereotype.Service;
 
 import java.util.List;
Index: src/main/java/com/example/Feng_Shui_Koi_Consulting_System/service/ElementCalculationService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.Feng_Shui_Koi_Consulting_System.service;\r\n\r\nimport org.springframework.stereotype.Service;\r\n\r\nimport java.time.LocalDate;\r\nimport java.time.ZoneId;\r\nimport java.util.Date;\r\n\r\n@Service\r\npublic class ElementCalculationService {\r\n\r\n    public int calculateElementId(LocalDate dateOfBirth) {\r\n        if (dateOfBirth == null) {\r\n            throw new IllegalArgumentException(\"Date of birth cannot be null\");\r\n        }\r\n\r\n        int birthYear = dateOfBirth.getYear();\r\n\r\n        try {\r\n            int canNumber = calculateCanNumber(birthYear);\r\n            int chiNumber = calculateChiNumber(birthYear);\r\n            int elementId = canNumber + chiNumber;\r\n\r\n            if(elementId>5){\r\n                elementId = elementId -5 ;\r\n            }\r\n            return elementId;\r\n        } catch (Exception e) {\r\n            throw new RuntimeException(\"Error calculating element ID\", e);\r\n        }\r\n    }\r\n\r\n\r\n    private int calculateCanNumber(int birthYear) {\r\n        int canTableNumber = birthYear % 10;\r\n        if (canTableNumber == 4 || canTableNumber == 5) return 1;\r\n        if (canTableNumber == 6 || canTableNumber == 7) return 2;\r\n        if (canTableNumber == 8 || canTableNumber == 9) return 3;\r\n        if (canTableNumber == 0 || canTableNumber == 1) return 4;\r\n        if (canTableNumber == 2 || canTableNumber == 3) return 5;\r\n        throw new IllegalArgumentException(\"Invalid birth year\");\r\n    }\r\n\r\n    private int calculateChiNumber(int birthYear) {\r\n        int chiTableNumber = birthYear % 12;\r\n        if (chiTableNumber == 4 || chiTableNumber == 5 || chiTableNumber == 10 || chiTableNumber == 11) return 0;\r\n        if (chiTableNumber == 0 || chiTableNumber == 1 || chiTableNumber == 6 || chiTableNumber == 7) return 1;\r\n        if (chiTableNumber == 2 || chiTableNumber == 3 || chiTableNumber == 8 || chiTableNumber == 9) return 2;\r\n        throw new IllegalArgumentException(\"Invalid birth year\");\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/example/Feng_Shui_Koi_Consulting_System/service/ElementCalculationService.java b/src/main/java/com/example/Feng_Shui_Koi_Consulting_System/service/ElementCalculationService.java
--- a/src/main/java/com/example/Feng_Shui_Koi_Consulting_System/service/ElementCalculationService.java	(revision c8504fad336dc4eb4ae3534b5392a08e8176c30e)
+++ b/src/main/java/com/example/Feng_Shui_Koi_Consulting_System/service/ElementCalculationService.java	(date 1728833733102)
@@ -30,6 +30,11 @@
         }
     }
 
+//    public String calculateElementName(LocalDate dateOfBirth){
+//        int birthYear = dateOfBirth.getYear();
+//
+//    }
+
 
     private int calculateCanNumber(int birthYear) {
         int canTableNumber = birthYear % 10;
Index: src/main/java/com/example/Feng_Shui_Koi_Consulting_System/controller/AdvertisementController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.Feng_Shui_Koi_Consulting_System.controller;\r\n\r\nimport com.example.Feng_Shui_Koi_Consulting_System.dto.request.AdvertisementCreationRequest;\r\nimport com.example.Feng_Shui_Koi_Consulting_System.dto.request.AdvertisementUpdateRequest;\r\nimport com.example.Feng_Shui_Koi_Consulting_System.dto.request.ApiResponse;\r\nimport com.example.Feng_Shui_Koi_Consulting_System.dto.response.AdvertisementResponse;\r\nimport com.example.Feng_Shui_Koi_Consulting_System.service.AdvertisementService;\r\nimport lombok.*;\r\nimport lombok.experimental.FieldDefaults;\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport org.springframework.web.bind.annotation.*;\r\n\r\nimport java.util.List;\r\n\r\n@RestController\r\n@RequiredArgsConstructor\r\n@FieldDefaults(level = AccessLevel.PRIVATE, makeFinal = true)\r\n@RequestMapping(\"/ad\")\r\npublic class AdvertisementController {\r\n    AdvertisementService advertisementService;\r\n\r\n    @PostMapping\r\n    ApiResponse<AdvertisementResponse> createAd(@RequestBody AdvertisementCreationRequest request){\r\n        return ApiResponse.<AdvertisementResponse>builder()\r\n                .result(advertisementService.createAdvertisement(request))\r\n                .build();\r\n    }\r\n\r\n    @GetMapping\r\n    ApiResponse<List<AdvertisementResponse>> getAllAds(){\r\n        return ApiResponse.<List<AdvertisementResponse>>builder()\r\n                .result(advertisementService.getListAdvertisements())\r\n                .build();\r\n    }\r\n\r\n//    @GetMapping(\"/category/{categoryID}\")\r\n//    ApiResponse<List<AdvertisementResponse>> getAdByCategory(@PathVariable(\"categoryID\") String categoryID){\r\n//        return ApiResponse.<List<AdvertisementResponse>>builder()\r\n//                .result(advertisementService.getAdvertisementByCategory(categoryID))\r\n//                .build();\r\n//    }\r\n\r\n//    @GetMapping(\"/user/{userID}\")\r\n//    ApiResponse<List<AdvertisementResponse>> getAdByUser(@PathVariable(\"userID\") String userID){\r\n//        return ApiResponse.<List<AdvertisementResponse>>builder()\r\n//                .result(advertisementService.getAdvertisementByUserID(userID))\r\n//                .build();\r\n//    }\r\n\r\n    @PutMapping(\"/{adID}\")\r\n    ApiResponse<AdvertisementResponse> updateAd(@PathVariable String adID, @RequestBody AdvertisementUpdateRequest request){\r\n        return ApiResponse.<AdvertisementResponse>builder()\r\n                .result(advertisementService.updateAdvertisement(adID, request))\r\n                .build();\r\n    }\r\n\r\n    @DeleteMapping(\"/{adID}\")\r\n    String deleteAd(@PathVariable String adID){\r\n        advertisementService.deleteAdvertisement(adID);\r\n        return \"Advertisement has been deleted\";\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/example/Feng_Shui_Koi_Consulting_System/controller/AdvertisementController.java b/src/main/java/com/example/Feng_Shui_Koi_Consulting_System/controller/AdvertisementController.java
--- a/src/main/java/com/example/Feng_Shui_Koi_Consulting_System/controller/AdvertisementController.java	(revision c8504fad336dc4eb4ae3534b5392a08e8176c30e)
+++ b/src/main/java/com/example/Feng_Shui_Koi_Consulting_System/controller/AdvertisementController.java	(date 1728834792326)
@@ -7,7 +7,6 @@
 import com.example.Feng_Shui_Koi_Consulting_System.service.AdvertisementService;
 import lombok.*;
 import lombok.experimental.FieldDefaults;
-import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.web.bind.annotation.*;
 
 import java.util.List;
@@ -33,19 +32,19 @@
                 .build();
     }
 
-//    @GetMapping("/category/{categoryID}")
-//    ApiResponse<List<AdvertisementResponse>> getAdByCategory(@PathVariable("categoryID") String categoryID){
-//        return ApiResponse.<List<AdvertisementResponse>>builder()
-//                .result(advertisementService.getAdvertisementByCategory(categoryID))
-//                .build();
-//    }
-
-//    @GetMapping("/user/{userID}")
-//    ApiResponse<List<AdvertisementResponse>> getAdByUser(@PathVariable("userID") String userID){
-//        return ApiResponse.<List<AdvertisementResponse>>builder()
-//                .result(advertisementService.getAdvertisementByUserID(userID))
-//                .build();
-//    }
+    @GetMapping("/category/{categoryID}")
+    ApiResponse<List<AdvertisementResponse>> getAdByCategory(@PathVariable("categoryID") String categoryID){
+        return ApiResponse.<List<AdvertisementResponse>>builder()
+                .result(advertisementService.getAdvertisementByCategory(categoryID))
+                .build();
+    }
+
+    @GetMapping("/user/{userID}")
+    ApiResponse<List<AdvertisementResponse>> getAdByUser(@PathVariable("userID") String userID){
+        return ApiResponse.<List<AdvertisementResponse>>builder()
+                .result(advertisementService.getAdvertisementByUserID(userID))
+                .build();
+    }
 
     @PutMapping("/{adID}")
     ApiResponse<AdvertisementResponse> updateAd(@PathVariable String adID, @RequestBody AdvertisementUpdateRequest request){
Index: src/main/java/com/example/Feng_Shui_Koi_Consulting_System/service/AdvertisementService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.Feng_Shui_Koi_Consulting_System.service;\r\n\r\nimport com.example.Feng_Shui_Koi_Consulting_System.dto.request.AdvertisementCreationRequest;\r\nimport com.example.Feng_Shui_Koi_Consulting_System.dto.request.AdvertisementUpdateRequest;\r\nimport com.example.Feng_Shui_Koi_Consulting_System.dto.response.AdvertisementResponse;\r\nimport com.example.Feng_Shui_Koi_Consulting_System.entity.Ads_Image;\r\nimport com.example.Feng_Shui_Koi_Consulting_System.entity.Advertisement;\r\nimport com.example.Feng_Shui_Koi_Consulting_System.exception.AppException;\r\nimport com.example.Feng_Shui_Koi_Consulting_System.exception.ErrorCode;\r\nimport com.example.Feng_Shui_Koi_Consulting_System.mapper.AdvertisementMapper;\r\nimport com.example.Feng_Shui_Koi_Consulting_System.repository.AdvertisementRepo;\r\nimport com.example.Feng_Shui_Koi_Consulting_System.repository.CategoryRepo;\r\nimport com.example.Feng_Shui_Koi_Consulting_System.repository.ElementRepo;\r\nimport com.example.Feng_Shui_Koi_Consulting_System.repository.UserRepository;\r\nimport lombok.AccessLevel;\r\nimport lombok.RequiredArgsConstructor;\r\nimport lombok.experimental.FieldDefaults;\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport org.springframework.stereotype.Service;\r\n\r\nimport java.util.List;\r\nimport java.util.Set;\r\nimport java.util.stream.Collectors;\r\n\r\n@Service\r\n@RequiredArgsConstructor\r\n@FieldDefaults(level = AccessLevel.PRIVATE, makeFinal = true)\r\npublic class AdvertisementService {\r\n\r\n    AdvertisementRepo advertisementRepo;\r\n    AdvertisementMapper advertisementMapper;\r\n    CategoryService categoryService;\r\n    UserService userService;\r\n    ElementRepo elementRepo;\r\n//    UserRepository userRepository;\r\n//    CategoryRepo categoryRepo;\r\n\r\n    public AdvertisementResponse createAdvertisement(AdvertisementCreationRequest request) {\r\n        Advertisement ad = advertisementMapper.toAdvertisement(request, elementRepo, categoryService, userService);\r\n        ad.setAdID(generateAdID());\r\n\r\n        if (request.getImagesURL() != null && !request.getImagesURL().isEmpty()) {\r\n            Set<Ads_Image> imagesAd = request.getImagesURL().stream()\r\n                    .map(imageUrl -> {\r\n                        Ads_Image adsImage = new Ads_Image();\r\n                        adsImage.setAdImageId(generateImage_Ads());\r\n                        adsImage.setImageURL(imageUrl);\r\n                        adsImage.setAdvertisement(ad); // Set the association to the advertisement\r\n                        return adsImage;\r\n                    })\r\n                    .collect(Collectors.toSet());\r\n            ad.setImagesAd(imagesAd);\r\n        }\r\n        return  advertisementMapper.toAdvertisementResponse(advertisementRepo.save(ad));\r\n    }\r\n\r\n    public List<AdvertisementResponse> getListAdvertisements(){\r\n        return advertisementRepo.findAll().stream()\r\n                .map(advertisementMapper :: toAdvertisementResponse).collect(Collectors.toList());\r\n    }\r\n\r\n//    public List<AdvertisementResponse> getAdvertisementByCategory(String categoryID){\r\n//        return advertisementRepo.findByCategoryID(categoryID).stream()\r\n//                .map(advertisementMapper :: toAdvertisementResponse).collect(Collectors.toList());\r\n//    }\r\n\r\n//    public List<AdvertisementResponse> getAdvertisementByUserID(String userID){\r\n//        return advertisementRepo.findByUserID(userID).stream()\r\n//                .map(advertisementMapper :: toAdvertisementResponse).collect(Collectors.toList());\r\n//    }\r\n\r\n    public AdvertisementResponse updateAdvertisement(String adID, AdvertisementUpdateRequest request){\r\n        Advertisement advertisement = advertisementRepo.findById(adID)\r\n                .orElseThrow(() -> new AppException(ErrorCode.AD_NOT_EXIST));\r\n        advertisementMapper\r\n                .updateAdvertisement(advertisement, request, elementRepo, categoryService, userService);\r\n        return advertisementMapper.toAdvertisementResponse(advertisementRepo.save(advertisement));\r\n    }\r\n\r\n    public void deleteAdvertisement(String adID){\r\n        Advertisement advertisement = advertisementRepo.findById(adID)\r\n                .orElseThrow(() -> new AppException(ErrorCode.AD_NOT_EXIST));\r\n        advertisementRepo.delete(advertisement);\r\n    }\r\n\r\n    public String generateAdID(){\r\n        return \"AD\" + String.format(\"%05d\", System.nanoTime() % 100000);\r\n    }\r\n\r\n    public String generateImage_Ads(){\r\n        return \"A\" + String.format(\"%05d\", System.nanoTime() % 100000);\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/example/Feng_Shui_Koi_Consulting_System/service/AdvertisementService.java b/src/main/java/com/example/Feng_Shui_Koi_Consulting_System/service/AdvertisementService.java
--- a/src/main/java/com/example/Feng_Shui_Koi_Consulting_System/service/AdvertisementService.java	(revision c8504fad336dc4eb4ae3534b5392a08e8176c30e)
+++ b/src/main/java/com/example/Feng_Shui_Koi_Consulting_System/service/AdvertisementService.java	(date 1728834792315)
@@ -9,13 +9,10 @@
 import com.example.Feng_Shui_Koi_Consulting_System.exception.ErrorCode;
 import com.example.Feng_Shui_Koi_Consulting_System.mapper.AdvertisementMapper;
 import com.example.Feng_Shui_Koi_Consulting_System.repository.AdvertisementRepo;
-import com.example.Feng_Shui_Koi_Consulting_System.repository.CategoryRepo;
 import com.example.Feng_Shui_Koi_Consulting_System.repository.ElementRepo;
-import com.example.Feng_Shui_Koi_Consulting_System.repository.UserRepository;
 import lombok.AccessLevel;
 import lombok.RequiredArgsConstructor;
 import lombok.experimental.FieldDefaults;
-import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.stereotype.Service;
 
 import java.util.List;
@@ -59,15 +56,15 @@
                 .map(advertisementMapper :: toAdvertisementResponse).collect(Collectors.toList());
     }
 
-//    public List<AdvertisementResponse> getAdvertisementByCategory(String categoryID){
-//        return advertisementRepo.findByCategoryID(categoryID).stream()
-//                .map(advertisementMapper :: toAdvertisementResponse).collect(Collectors.toList());
-//    }
-
-//    public List<AdvertisementResponse> getAdvertisementByUserID(String userID){
-//        return advertisementRepo.findByUserID(userID).stream()
-//                .map(advertisementMapper :: toAdvertisementResponse).collect(Collectors.toList());
-//    }
+    public List<AdvertisementResponse> getAdvertisementByCategory(String categoryID){
+        return advertisementRepo.findByCategoryID(categoryID).stream()
+                .map(advertisementMapper :: toAdvertisementResponse).collect(Collectors.toList());
+    }
+
+    public List<AdvertisementResponse> getAdvertisementByUserID(String userID){
+        return advertisementRepo.findByUserID(userID).stream()
+                .map(advertisementMapper :: toAdvertisementResponse).collect(Collectors.toList());
+    }
 
     public AdvertisementResponse updateAdvertisement(String adID, AdvertisementUpdateRequest request){
         Advertisement advertisement = advertisementRepo.findById(adID)
